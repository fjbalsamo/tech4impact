apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: middle-conditional-template
  title: Example Conditional Template
  description: Basic Conditional flow in a template
  tags:
    - conditional
    - tech4impact
spec:
  owner: user:guest
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Question we'll use as a condition
      required:
        - lang
      properties:
        lang:
          title: Languaje
          type: string
          description: Select a Programming languaje
          default: js
          enum:
            - js
            - python
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template/common
        values:
          name: ${{ parameters.name }}
          lang: ${{ parameters.lang }}
          dynamo: ${{ parameters.dynamo }}
    
    - id: fetch-js-base
      name: Conditional Fetch Base for NodeJS
      action: fetch:template
      if: ${{ parameters.lang == 'js' }}
      input:
        url: ./template/js
        values:
          name: ${{ parameters.name }}
          lang: ${{ parameters.lang }}
    
    - id: fetch-py-base
      name: Conditional Fetch Base for Python
      action: fetch:template
      if: ${{ parameters.lang == 'python' }}
      input:
        url: ./template/python
        values:
          name: ${{ parameters.name }}
          lang: ${{ parameters.lang }}

    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
